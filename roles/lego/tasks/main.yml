---
- name: install lego packages
  package:
    name: '{{ lego_packages }}'
    state: present

- name: create lego group
  group:
    name: _lego

- name: create lego user
  user:
    name: _lego
    group: _lego
    comment: lego user
    create_home: false
    password: '*************'

- name: create lego directories
  file:
    path: '/etc/lego/'
    state: directory
    owner: _lego
    group: _lego
    mode: '0700'

- name: create lego environment
  template:
    src: homelab.env.j2
    dest: '/etc/lego/homelab.env'
    mode: '0600'
    owner: _lego
    group: _lego

- name: generate certificates
  command: >-
    /usr/local/bin/lego --accept-tos
    --dns {{ lego_dns }}
    --path /etc/lego
    --email {{ lego_email }}
    --domains '*.{{ domain }}'
    {{ lego_args }}
    run
  args:
    creates: '/etc/lego/certificates/_.{{ domain }}.crt'
  environment: '{{ lego_env }}'
  become: true
  become_user: _lego

- name: copy certificates
  copy:
    remote_src: true
    src: '/etc/lego/certificates/{{ item.src }}'
    dest: '/etc/ssl/{{ item.dest }}'
    mode: '{{ item.mode }}'
    owner: _lego
    group: _lego
  with_items:
    - src: '_.{{ domain }}.crt'
      dest: 'homelab.crt'
      mode: '0644'
    - src: '_.{{ domain }}.key'
      dest: 'homelab.key'
      mode: '0640'

- name: create daily.local.lego
  template:
    src: daily.local.lego.j2
    dest: /etc/daily.local.lego
    owner: root
    group: wheel
    mode: '0644'

- name: ensure daily.local calls daily.local.lego
  lineinfile:
    path: /etc/daily.local
    regex: '^\. /etc/daily.local.lego$'
    line: '. /etc/daily.local.lego'

- name: flush_handlers
  meta: flush_handlers
