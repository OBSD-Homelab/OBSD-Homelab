---
- name: install postgresql packages
  package:
    name: "{{ psql_packages }}"
    state: present

- name: set up /var/www/var/run/postgresql
  file:
    path: /var/www/var/run/postgresql
    state: directory
    mode: '0755'
    owner: _postgresql
    group: www

- name: enable postgresql service
  service:
    name: postgresql
    enabled: true

- name: initialize postgresql
  command: initdb -D /var/postgresql/data -U postgres -E UTF8 -A peer
  args:
    creates: /var/postgresql/data/PG_VERSION
  become: true
  become_user: _postgresql

- name: generate configuration
  template:
    src: postgresql.conf.j2
    dest: /var/postgresql/data/postgresql.conf
    owner: _postgresql
    group: _postgresql
    mode: '0600'
  notify: restart postgresql

- name: generate user configurations
  copy:
    src: '{{ item }}'
    dest: /var/postgresql/data/{{ item }}
    owner: _postgresql
    group: _postgresql
    mode: '0600'
  with_items:
    - pg_hba.conf
    - pg_ident.conf
  notify: restart postgresql

- name: ensure sysctl.conf exists
  file:
    path: /etc/sysctl.conf
    state: touch
    owner: root
    group: wheel
    mode: '0644'
    modification_time: preserve
    access_time: preserve

- name: Ensure semmni for busy servers
  lineinfile:
    path: /etc/sysctl.conf
    regexp: "^kern.seminfo.semmni"
    line: "kern.seminfo.semmni={{ psql_semmni }}"
  notify:
    - sysctl semmni
    - restart postgresql
  register: _psql_semmni

- name: Ensure semmns for busy servers
  lineinfile:
    path: /etc/sysctl.conf
    regexp: "^kern.seminfo.semmns"
    line: "kern.seminfo.semmns={{ psql_semmns }}"
  notify:
    - sysctl semmns
    - restart postgresql
  register: _psql_semmns

- name: ensure postgresql is started
  service:
    name: postgresql
    state: started
  when: not ( _psql_semmns.changed and _psql_semmni.changed )

- name: flush_handlers
  meta: flush_handlers
