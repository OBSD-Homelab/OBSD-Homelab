---
- name: Install postgresql packages
  ansible.builtin.package:
    name: '{{ psql_packages }}'
    state: present

- name: Set up postgresql directories
  ansible.builtin.file:
    path: '{{ item.path }}'
    state: directory
    mode: '{{ item.mode }}'
    owner: '{{ item.user }}'
    group: '{{ item.group }}'
  with_items: '{{ psql_directories }}'

- name: Enable postgresql service
  ansible.builtin.service:
    name: postgresql
    enabled: true

- name: Initialize postgresql
  ansible.builtin.command: initdb -D /var/postgresql/data -U postgres -E UTF8 -A peer
  args:
    creates: /var/postgresql/data/PG_VERSION
  become: true
  become_user: _postgresql

- name: Generate configuration
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: /var/postgresql/data/postgresql.conf
    owner: _postgresql
    group: _postgresql
    mode: '0600'
  notify: restart postgresql

- name: Generate user configurations
  ansible.builtin.template:
    src: '{{ item }}.j2'
    dest: /var/postgresql/data/{{ item }}
    owner: _postgresql
    group: _postgresql
    mode: '0600'
  with_items:
    - pg_hba.conf
    - pg_ident.conf
  notify: restart postgresql

- name: Ensure sysctl.conf exists
  ansible.builtin.file:
    path: /etc/sysctl.conf
    state: touch
    owner: root
    group: wheel
    mode: '0644'
    modification_time: preserve
    access_time: preserve

- name: Ensure semmni for busy servers
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: '^kern.seminfo.semmni'
    line: 'kern.seminfo.semmni={{ psql_semmni }}'
  notify:
    - sysctl semmni
    - restart postgresql
  register: _psql_semmni

- name: Ensure semmns for busy servers
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: '^kern.seminfo.semmns'
    line: 'kern.seminfo.semmns={{ psql_semmns }}'
  notify:
    - sysctl semmns
    - restart postgresql
  register: _psql_semmns

- name: Ensure postgresql is started
  ansible.builtin.service:
    name: postgresql
    state: started
  when: not ( _psql_semmns.changed and _psql_semmni.changed )

- name: Create daily.local.d for postgresql dump
  ansible.builtin.copy:
    src: 001_postgresql_dump
    dest: /etc/daily.local.d/001_postgresql_dump
    owner: root
    group: wheel
    mode: '0640'

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
