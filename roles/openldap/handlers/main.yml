---
- name: update man database
  command: makewhatis

- name: create schema ldifs
  shell: schema2ldif "/etc/openldap/schema/{{ item }}" > /etc/openldap/schema2ldif/{{ item | regex_replace('\.schema$', '.ldif') }}
  with_items: '{{ openldap_schemas }}'
  become: true
  become_user: '{{ openldap_user }}'
  notify:
    - stop slapd server
    - remove current slapd.d config

- name: stop slapd server
  service:
    name: slapd
    state: stopped

- name: remove current slapd.d config
  command: find /etc/slapd.d -mindepth 1 -delete
  notify: load new slapd.d config

- name: load new slapd.d config
  command: slapadd -n0 -F /etc/slapd.d -l /etc/slapd.ldif
  become: true
  become_user: '{{ openldap_user }}'
  notify: update openldap admin password

- name: update openldap admin password
  command: /bin/echo
  notify:
    - start slapd server
    - get admin password hash

- name: start slapd server
  service:
    name: slapd
    state: started

- name: get admin password hash
  shell: |
    set -o pipefail
    printf %s\\n "{{ openldap_admin_password }}" | encrypt
  register: _openldap_admin_password_hash
  notify:
    - set admin password hash variable
    - create admin password change ldif

- name: set admin password hash variable
  set_fact:
    openldap_admin_password_hash: '{{ _openldap_admin_password_hash.stdout }}'

- name: create admin password change ldif
  template:
    src: admin_password.ldif.j2
    dest: /tmp/admin_password.ldif
    owner: root
    group: wheel
    mode: '0600'
  notify: change admin password

- name: change admin password
  command: ldapmodify -Y EXTERNAL -Q -H 'ldapi://%2ftmp%2fslapd.sock' -f /tmp/admin_password.ldif
  notify: delete admin password change ldif

- name: delete admin password change ldif
  file:
    state: absent
    path: /tmp/admin_password.ldif
