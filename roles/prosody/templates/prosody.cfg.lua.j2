prosody_user = "_prosody"
prosody_group = "_prosody"

pidfile = "/var/prosody/prosody.pid"

log = {
    debug = "/var/prosody/prosody.log";
    error = "/var/prosody/prosody.err";
}

{% if prosody_plugin_paths %}
plugin_paths = { {{ '"' + prosody_plugin_paths|join('", "') + '"' }} }
{% endif %}

modules_enabled = {
    -- Generally required
    "disco"; -- Service discovery
    "roster"; -- Allow users to have a roster. Recommended ;)
    "saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
    "tls"; -- Add support for secure TLS on c2s/s2s connections

    -- Not essential, but recommended
    "blocklist"; -- Allow users to block communications with other users
    "bookmarks"; -- Synchronise the list of open rooms between clients
    "carbons"; -- Keep multiple online clients in sync
    "dialback"; -- Support for verifying remote servers using DNS
    "limits"; -- Enable bandwidth limiting for XMPP connections
    "pep"; -- Allow users to store public and private data in their account
    "private"; -- Legacy account storage mechanism (XEP-0049)
    "smacks"; -- Stream management and resumption (XEP-0198)
    "vcard4"; -- User profiles (stored in PEP)
    "vcard_legacy"; -- Conversion between legacy vCard and PEP Avatar, vcard

    -- Nice to have
    "csi_simple"; -- Simple but effective traffic optimizations for mobile devices
    "invites"; -- Create and manage invites
    "invites_adhoc"; -- Allow admins/users to create invitations via their client
    "invites_register"; -- Allows invited users to create accounts
    "ping"; -- Replies to XMPP pings with pongs
    "register"; -- Allow users to register on this server using a client and change passwords
    "time"; -- Let others know the time here on this server
    "uptime"; -- Report how long server has been running
    "version"; -- Replies to server version requests
    --"mam"; -- Store recent messages to allow multi-device synchronization
    --"turn_external"; -- Provide external STUN/TURN service for e.g. audio/video calls

    -- Admin interfaces
    "admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
    "admin_shell"; -- Allow secure administration via 'prosodyctl shell'

    -- HTTP modules
    "bosh"; -- Enable BOSH clients, aka "Jabber over HTTP"
    --"http_openmetrics"; -- for exposing metrics to stats collectors
    "websocket"; -- XMPP over WebSockets
}

modules_disabled = {
    -- "offline"; -- Store offline messages
    -- "c2s"; -- Handle client connections
    "s2s"; -- Handle server-to-server connections
};

storage = "sql"
sql = { driver = "PostgreSQL", database = "prosodyd", username = "prosody", password = "{{ prosody_db_pass }}", host = "localhost" }

gc = {
    mode = "incremental";
    threshold = 150;
    speed = 250;
}

authentication = "ldap"
ldap_base = "{{ prosody_ldap_base }}"
ldap_rootdn = "{{ prosody_ldap_user }}"
ldap_password = "{{ prosody_ldap_pass }}"
allow_registration = false;

s2s_secure_auth = true
s2s_require_encryption = true
s2s_ports = { 5269 }
s2s_interfaces = { "0.0.0.0", "::" }
s2s_direct_tls_ports = { 5270 }
s2s_direct_tls_interfaces = { "0.0.0.0", "::" }

c2s_require_encryption = true
c2s_ports = { 5222 }
c2s_interfaces = { "0.0.0.0", "::" }
c2s_direct_tls_ports = { 5223 }
c2s_direct_tls_interfaces = { "0.0.0.0", "::" }

component_ports = { 5347 }
component_interfaces = { "127.0.0.1", "::1" }

http_ports = { 5280 }
http_interfaces = { "127.0.0.1", "::1" }
https_ports = { 5281 }
https_interfaces = { "0.0.0.0", "::" }

smacks_max_unacked_stanzas = 5
smacks_hibernation_time = 60
smacks_max_hibernated_sessions = 1
smacks_max_old_sessions = 1

{% if prosody_secure_bosh %}
consider_bosh_secure = true
{% endif %}
{% if prosody_secure_websockets %}
consider_websockets_secure = true
{% endif %}

Include "conf.d/*.cfg.lua"
